{"version":2,"kind":"Notebook","sha256":"a16cb8718d64a26e4a7e3063f1f81bdfe01682a91effd91d8a855d2cbec65953","slug":"schelling","location":"/schelling.md","dependencies":[],"frontmatter":{"title":"Racial Segregation","kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"jupytext":{"text_representation":{"extension":".md","format_name":"myst","format_version":"0.13","jupytext_version":"1.14.1"}},"content_includes_title":false,"authors":[{"nameParsed":{"literal":"Thomas J. Sargent","given":"Thomas J.","family":"Sargent"},"name":"Thomas J. Sargent","affiliations":["Professor of Economics, New York University.","Senior Fellow, Hoover Institution, Stanford, CA."],"url":"http://www.tomsargent.com","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"John Stachurski","given":"John","family":"Stachurski"},"name":"John Stachurski","email":"john.stachurski@gmail.com","affiliations":["Professor, Research School of Economics, ANU.","Instructor for Ph.D. Advanced Macroeconomics, University of Minnesota."],"url":"https://johnstachurski.net","id":"contributors-myst-generated-uid-1","corresponding":true}],"github":"https://github.com/QuantEcon/project.lecture-wasm","numbering":{"title":{"enabled":true,"offset":1},"heading_1":{"enabled":false},"figure":{"enabled":true,"template":"Fig. %s"},"heading_2":{"enabled":true},"heading_3":{"enabled":true},"heading_4":{"enabled":true},"heading_5":{"enabled":true},"heading_6":{"enabled":true}},"affiliations":[{"id":"Professor of Economics, New York University.","name":"Professor of Economics, New York University."},{"id":"Senior Fellow, Hoover Institution, Stanford, CA.","name":"Senior Fellow, Hoover Institution, Stanford, CA."},{"id":"Professor, Research School of Economics, ANU.","name":"Professor, Research School of Economics, ANU."},{"id":"Instructor for Ph.D. Advanced Macroeconomics, University of Minnesota.","name":"Instructor for Ph.D. Advanced Macroeconomics, University of Minnesota."}],"source_url":"https://github.com/QuantEcon/project.lecture-wasm/blob/main/lectures/schelling.md","edit_url":"https://github.com/QuantEcon/project.lecture-wasm/edit/main/lectures/schelling.md","enumerator":"18","exports":[{"format":"md","filename":"schelling.md","url":"/build/schelling-f9b2df1119014f4ab684b22f2b96b586.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Outline","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"fH63zFeUcH"}],"indexEntries":[{"entry":"Models","subEntry":{"value":"Schelling's Segregation Model","kind":"entry"},"emphasis":false},{"entry":"Schelling Segregation Model","emphasis":false}],"identifier":"outline","label":"Outline","html_id":"outline","implicit":true,"enumerator":"18.1","key":"NbLG5Zi8Te"},{"type":"paragraph","position":{"start":{"line":25,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"In 1969, Thomas C. Schelling developed a simple but striking model of racial\nsegregation ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"lbUkAr6h5q"},{"type":"cite","kind":"narrative","label":"Schelling1969","identifier":"schelling1969","children":[{"type":"text","value":"Schelling (1969)","key":"IG864RWuv1"}],"enumerator":"1","key":"iOqBkIkSdp"},{"type":"text","value":".","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"YOBl0cIJQp"}],"key":"QgyS50bsSP"},{"type":"paragraph","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"His model studies the dynamics of racially mixed neighborhoods.","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"frjqsEihg7"}],"key":"z5ZhrtgdzD"},{"type":"paragraph","position":{"start":{"line":30,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Like much of Schelling’s work, the model shows how local interactions can lead\nto surprising aggregate outcomes.","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"mQrXrzyjBb"}],"key":"nAXm0x0Jux"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"It studies a setting where agents (think of households) have relatively mild\npreference for neighbors of the same race.","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"NRxKUEujBN"}],"key":"yf8yMSyYNw"},{"type":"paragraph","position":{"start":{"line":36,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"For example, these agents might be comfortable with a mixed race neighborhood\nbut uncomfortable when they feel “surrounded” by people from a different race.","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"DWYt7b0ejG"}],"key":"gzw2d8ePZh"},{"type":"paragraph","position":{"start":{"line":39,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"Schelling illustrated the follow surprising result: in such a setting, mixed\nrace neighborhoods are likely to be unstable, tending to collapse over time.","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"tr39NYjVi5"}],"key":"F19GHmifQn"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":43,"column":1}},"children":[{"type":"text","value":"In fact the model predicts strongly divided neighborhoods, with high levels of\nsegregation.","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"f6UOWHA5QS"}],"key":"Ka7tXxlj43"},{"type":"paragraph","position":{"start":{"line":45,"column":1},"end":{"line":46,"column":1}},"children":[{"type":"text","value":"In other words, extreme segregation outcomes arise even though people’s\npreferences are not particularly extreme.","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"key":"znL5ubOGrj"}],"key":"oFtDM03Am1"},{"type":"paragraph","position":{"start":{"line":48,"column":1},"end":{"line":50,"column":1}},"children":[{"type":"text","value":"These extreme outcomes happen because of ","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"mAM7Q7LQVM"},{"type":"emphasis","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"interactions","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"Xw1FyBdlVk"}],"key":"PSBN8xYgi3"},{"type":"text","value":" between agents in the\nmodel (e.g., households in a city) that drive self-reinforcing dynamics in the\nmodel.","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"LTBsxPhW03"}],"key":"LzitaGObKn"},{"type":"paragraph","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"children":[{"type":"text","value":"These ideas will become clearer as the lecture unfolds.","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"key":"oBggn7ipHf"}],"key":"Ghn3wEHPF8"},{"type":"paragraph","position":{"start":{"line":54,"column":1},"end":{"line":55,"column":1}},"children":[{"type":"text","value":"In recognition of his work on segregation and other research, Schelling was\nawarded the 2005 Nobel Prize in Economic Sciences (joint with Robert Aumann).","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"WfbrhYcAd0"}],"key":"DoFhgRW8lx"},{"type":"paragraph","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"Let’s start with some imports:","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"XmaaNw0AwJ"}],"key":"F0fkoNRaUx"}],"key":"DeYamBKJQ8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt\nfrom random import uniform, seed\nfrom math import sqrt\nimport numpy as np","key":"IQuehLDgKC"},{"type":"output","id":"ofHaERLkUboWj75LHucla","data":[],"key":"lFsYWJjoyx"}],"key":"SSt1CCHBFm"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"children":[{"type":"text","value":"The model","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"key":"iCtt1QJqVz"}],"identifier":"the-model","label":"The model","html_id":"the-model","implicit":true,"enumerator":"18.2","key":"WACsDBhoXw"},{"type":"paragraph","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"text","value":"In this section we will build a version of Schelling’s model.","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"Cfb79GGCAw"}],"key":"uU8d2xhqXq"},{"type":"heading","depth":3,"position":{"start":{"line":71,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"text","value":"Set-Up","position":{"start":{"line":71,"column":1},"end":{"line":71,"column":1}},"key":"Dj1h3hU977"}],"identifier":"set-up","label":"Set-Up","html_id":"set-up","implicit":true,"enumerator":"18.2.1","key":"hWC2Za8gxo"},{"type":"paragraph","position":{"start":{"line":73,"column":1},"end":{"line":75,"column":1}},"children":[{"type":"text","value":"We will cover a variation of Schelling’s model that is different from the\noriginal but also easy to program and, at the same time, captures his main\nidea.","position":{"start":{"line":73,"column":1},"end":{"line":73,"column":1}},"key":"RDgEFj0TDY"}],"key":"iawo6Wf0Cm"},{"type":"paragraph","position":{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},"children":[{"type":"text","value":"Suppose we have two types of people: orange people and green people.","position":{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},"key":"Ni4ztBKsQI"}],"key":"sWpWV2pEFC"},{"type":"paragraph","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"children":[{"type":"text","value":"Assume there are ","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"key":"Fli36agMfQ"},{"type":"inlineMath","value":"n","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>","key":"ZTI4RDEt6k"},{"type":"text","value":" of each type.","position":{"start":{"line":79,"column":1},"end":{"line":79,"column":1}},"key":"EhZvp1a5Pz"}],"key":"cb2uMf0Bcx"},{"type":"paragraph","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"children":[{"type":"text","value":"These agents all live on a single unit square.","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"mRGIH2M0EQ"}],"key":"rWEeXjB4AA"},{"type":"paragraph","position":{"start":{"line":83,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"Thus, the location (e.g, address) of an agent is just a point ","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"key":"mzTjsRFPTF"},{"type":"inlineMath","value":"(x, y)","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x, y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>","key":"p40zohU8Fr"},{"type":"text","value":",  where\n","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"key":"XMDWr5fIWh"},{"type":"inlineMath","value":"0 < x, y < 1","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 &lt; x, y &lt; 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>","key":"F2UGkY3I12"},{"type":"text","value":".","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"key":"Olc8DPwYGE"}],"key":"bUKMNnhVsb"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":86,"column":1},"end":{"line":88,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"The set of all points ","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"Z9sLMTAdPB"},{"type":"inlineMath","value":"(x,y)","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>","key":"DSGy9SS7vi"},{"type":"text","value":" satisfying ","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"gt7eEDDpTE"},{"type":"inlineMath","value":"0 < x, y < 1","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 &lt; x, y &lt; 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>","key":"nmHif48kAG"},{"type":"text","value":" is called the ","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"uGdNsPkGND"},{"type":"strong","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"children":[{"type":"text","value":"unit square","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"bLZ94pYf7d"}],"key":"FE49lbqkhp"}],"key":"Em4UtXVYVo"}],"key":"Izl8Jt2hUU"},{"type":"listItem","spread":true,"position":{"start":{"line":87,"column":1},"end":{"line":88,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Below we denote the unit square by ","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"FSmWQk3m9r"},{"type":"inlineMath","value":"S","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>","key":"Bc1mvzoN9o"}],"key":"Ss7RPH4H4Y"}],"key":"h2rWrX4d5Y"}],"key":"yOAPtAmxwJ"}],"key":"LvaCW4xKYj"},{"type":"block","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"children":[{"type":"text","value":"Preferences","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"GAgGGOrbx2"}],"identifier":"preferences","label":"Preferences","html_id":"preferences","implicit":true,"enumerator":"18.2.2","key":"nlqmRq4YFv"},{"type":"paragraph","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"children":[{"type":"text","value":"We will say that an agent is ","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"zTPjrODWxB"},{"type":"emphasis","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"children":[{"type":"text","value":"happy","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"KlDApYTqqO"}],"key":"eBBek3TjT4"},{"type":"text","value":" if 5 or more of her 10 nearest neighbors are of the same type.","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"yoiJRLJM3Q"}],"key":"WxElZbj2um"},{"type":"paragraph","position":{"start":{"line":95,"column":1},"end":{"line":95,"column":1}},"children":[{"type":"text","value":"An agent who is not happy is called ","position":{"start":{"line":95,"column":1},"end":{"line":95,"column":1}},"key":"i8Su5LiuJ6"},{"type":"emphasis","position":{"start":{"line":95,"column":1},"end":{"line":95,"column":1}},"children":[{"type":"text","value":"unhappy","position":{"start":{"line":95,"column":1},"end":{"line":95,"column":1}},"key":"j3tUlaOJ4l"}],"key":"e97e4h2cur"},{"type":"text","value":".","position":{"start":{"line":95,"column":1},"end":{"line":95,"column":1}},"key":"PjUcSXggEs"}],"key":"Mx7jHeDYPX"},{"type":"paragraph","position":{"start":{"line":97,"column":1},"end":{"line":97,"column":1}},"children":[{"type":"text","value":"For example,","position":{"start":{"line":97,"column":1},"end":{"line":97,"column":1}},"key":"P6ToefF01u"}],"key":"dNSNVPIxyj"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":99,"column":1},"end":{"line":101,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"if an agent is orange and 5 of her 10 nearest neighbors are orange, then she is happy.","position":{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},"key":"KQBVKZmCmS"}],"key":"QCDd1IBITv"}],"key":"c5hDQbVMwn"},{"type":"listItem","spread":true,"position":{"start":{"line":100,"column":1},"end":{"line":101,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"if an agent is green and 8 of her 10 nearest neighbors are orange, then she is unhappy.","position":{"start":{"line":100,"column":1},"end":{"line":100,"column":1}},"key":"JW8eqhy0RQ"}],"key":"L2OIIumOok"}],"key":"xmwUjsjJgj"}],"key":"wa6pDvdbfT"},{"type":"paragraph","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"children":[{"type":"text","value":"‘Nearest’ is in terms of ","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"key":"JCBRUdLUwd"},{"type":"link","url":"https://en.wikipedia.org/wiki/Euclidean_distance","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"children":[{"type":"text","value":"Euclidean distance","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"key":"fWzISYtb0w"}],"urlSource":"https://en.wikipedia.org/wiki/Euclidean_distance","data":{"page":"Euclidean_distance","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"vzVk4AIO71"},{"type":"text","value":".","position":{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},"key":"l6B9dHKxBa"}],"key":"dpJw1piYNp"},{"type":"paragraph","position":{"start":{"line":104,"column":1},"end":{"line":104,"column":1}},"children":[{"type":"text","value":"An important point to note is that agents are ","position":{"start":{"line":104,"column":1},"end":{"line":104,"column":1}},"key":"PIfbJCVU9g"},{"type":"strong","position":{"start":{"line":104,"column":1},"end":{"line":104,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":104,"column":1},"end":{"line":104,"column":1}},"key":"Z94bUOdijQ"}],"key":"nOBvZdhDg7"},{"type":"text","value":" averse to living in mixed areas.","position":{"start":{"line":104,"column":1},"end":{"line":104,"column":1}},"key":"xuLiQZUtoZ"}],"key":"XKFSzitCMi"},{"type":"paragraph","position":{"start":{"line":106,"column":1},"end":{"line":106,"column":1}},"children":[{"type":"text","value":"They are perfectly happy if half of their neighbors are of the other color.","position":{"start":{"line":106,"column":1},"end":{"line":106,"column":1}},"key":"ZkhzSkMbpP"}],"key":"kCCWXwyuho"}],"key":"sWV3xBKmgh"},{"type":"block","position":{"start":{"line":108,"column":1},"end":{"line":108,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},"children":[{"type":"text","value":"Behavior","position":{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},"key":"C2tOqJI81M"}],"identifier":"behavior","label":"Behavior","html_id":"behavior","implicit":true,"enumerator":"18.2.3","key":"AuzOgsmMEB"},{"type":"paragraph","position":{"start":{"line":112,"column":1},"end":{"line":112,"column":1}},"children":[{"type":"text","value":"Initially, agents are mixed together (integrated).","position":{"start":{"line":112,"column":1},"end":{"line":112,"column":1}},"key":"njPbrUFSQL"}],"key":"pigbLaBmwi"},{"type":"paragraph","position":{"start":{"line":114,"column":1},"end":{"line":115,"column":1}},"children":[{"type":"text","value":"In particular, we assume that the initial location of each agent is an\nindependent draw from a bivariate uniform distribution on the unit square ","position":{"start":{"line":114,"column":1},"end":{"line":114,"column":1}},"key":"cZCYRMWMXb"},{"type":"inlineMath","value":"S","position":{"start":{"line":114,"column":1},"end":{"line":114,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>","key":"c2sn4e7p3X"},{"type":"text","value":".","position":{"start":{"line":114,"column":1},"end":{"line":114,"column":1}},"key":"kSZR9GDMXD"}],"key":"v2wEyOCpFI"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":117,"column":1},"end":{"line":119,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":117,"column":1},"end":{"line":117,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"First their ","position":{"start":{"line":117,"column":1},"end":{"line":117,"column":1}},"key":"iLKrNBpE76"},{"type":"inlineMath","value":"x","position":{"start":{"line":117,"column":1},"end":{"line":117,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>","key":"nbqkgS978e"},{"type":"text","value":" coordinate is drawn from a uniform distribution on ","position":{"start":{"line":117,"column":1},"end":{"line":117,"column":1}},"key":"bPhPH4fGce"},{"type":"inlineMath","value":"(0,1)","position":{"start":{"line":117,"column":1},"end":{"line":117,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>","key":"GEjDP98xbA"}],"key":"VDPhGPgsi8"}],"key":"EEgLfFCmEK"},{"type":"listItem","spread":true,"position":{"start":{"line":118,"column":1},"end":{"line":119,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Then, independently, their ","position":{"start":{"line":118,"column":1},"end":{"line":118,"column":1}},"key":"L4fDpxCtlM"},{"type":"inlineMath","value":"y","position":{"start":{"line":118,"column":1},"end":{"line":118,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>","key":"y4717ACotG"},{"type":"text","value":" coordinate is drawn from the same distribution.","position":{"start":{"line":118,"column":1},"end":{"line":118,"column":1}},"key":"pHh0VKPafm"}],"key":"qVITsgpxOF"}],"key":"elzslNRush"}],"key":"o3Oi4q6tLk"},{"type":"paragraph","position":{"start":{"line":120,"column":1},"end":{"line":120,"column":1}},"children":[{"type":"text","value":"Now, cycling through the set of all agents, each agent is now given the chance to stay or move.","position":{"start":{"line":120,"column":1},"end":{"line":120,"column":1}},"key":"jMri1ak0Ir"}],"key":"Viouh8bphQ"},{"type":"paragraph","position":{"start":{"line":122,"column":1},"end":{"line":122,"column":1}},"children":[{"type":"text","value":"Each agent stays if they are happy and moves if they are unhappy.","position":{"start":{"line":122,"column":1},"end":{"line":122,"column":1}},"key":"rMSE0ejp3d"}],"key":"H5rze7C6ug"},{"type":"paragraph","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"children":[{"type":"text","value":"The algorithm for moving is as follows","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"key":"UBxsmsmDoP"}],"key":"ev8vXMPYtV"},{"type":"proof","kind":"algorithm","enumerated":true,"children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Jump Chain Algorithm","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"key":"DR4gj4v0Og"}],"key":"lJp5XJ34j5"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":129,"column":1},"end":{"line":131,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":129,"column":1},"end":{"line":129,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Draw a random location in ","position":{"start":{"line":129,"column":1},"end":{"line":129,"column":1}},"key":"mDvMGZkPCe"},{"type":"inlineMath","value":"S","position":{"start":{"line":129,"column":1},"end":{"line":129,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>","key":"RTXc5UTohp"}],"key":"xTkMOGbxcA"}],"key":"x18biaVH8C"},{"type":"listItem","spread":true,"position":{"start":{"line":130,"column":1},"end":{"line":130,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"If happy at new location, move there","position":{"start":{"line":130,"column":1},"end":{"line":130,"column":1}},"key":"iCslWPyLdc"}],"key":"uW9uZYQbGA"}],"key":"i4POIxXuBo"},{"type":"listItem","spread":true,"position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Otherwise, go to step 1","position":{"start":{"line":131,"column":1},"end":{"line":131,"column":1}},"key":"jm4kk1HVoH"}],"key":"fEZSi9fvG7"}],"key":"tTdQIKCCFd"}],"key":"puFfAHd79M"}],"label":"move_algo","identifier":"move_algo","enumerator":"1","html_id":"move-algo","key":"cKgVjr3hUS"},{"type":"paragraph","position":{"start":{"line":135,"column":1},"end":{"line":136,"column":1}},"children":[{"type":"text","value":"We cycle continuously through the agents, each time allowing an unhappy agent\nto move.","position":{"start":{"line":135,"column":1},"end":{"line":135,"column":1}},"key":"jcCpCnlIEk"}],"key":"KSOf37vGWR"},{"type":"paragraph","position":{"start":{"line":138,"column":1},"end":{"line":138,"column":1}},"children":[{"type":"text","value":"We continue to cycle until no one wishes to move.","position":{"start":{"line":138,"column":1},"end":{"line":138,"column":1}},"key":"sXsVWI3VRs"}],"key":"ZE2Gxi1KeW"}],"key":"Wv9wi9eTTV"},{"type":"block","position":{"start":{"line":140,"column":1},"end":{"line":140,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":142,"column":1},"end":{"line":142,"column":1}},"children":[{"type":"text","value":"Results","position":{"start":{"line":142,"column":1},"end":{"line":142,"column":1}},"key":"kYEiDCO1pY"}],"identifier":"results","label":"Results","html_id":"results","implicit":true,"enumerator":"18.3","key":"TZNuUiIpPf"},{"type":"paragraph","position":{"start":{"line":144,"column":1},"end":{"line":144,"column":1}},"children":[{"type":"text","value":"Let’s now implement and run this simulation.","position":{"start":{"line":144,"column":1},"end":{"line":144,"column":1}},"key":"uKvHuxo8tS"}],"key":"oMxJNBpOiJ"},{"type":"paragraph","position":{"start":{"line":146,"column":1},"end":{"line":146,"column":1}},"children":[{"type":"text","value":"In what follows, agents are modeled as ","position":{"start":{"line":146,"column":1},"end":{"line":146,"column":1}},"key":"r11n4ZQ56j"},{"type":"link","url":"https://python-programming.quantecon.org/python_oop.html","position":{"start":{"line":146,"column":1},"end":{"line":146,"column":1}},"children":[{"type":"text","value":"objects","position":{"start":{"line":146,"column":1},"end":{"line":146,"column":1}},"key":"RpR155J260"}],"urlSource":"https://python-programming.quantecon.org/python_oop.html","key":"GRUEWqC6Ou"},{"type":"text","value":".","position":{"start":{"line":146,"column":1},"end":{"line":146,"column":1}},"key":"QTn74BDK4G"}],"key":"XVHZA8KqZT"},{"type":"paragraph","position":{"start":{"line":148,"column":1},"end":{"line":148,"column":1}},"children":[{"type":"text","value":"Here’s an indication of their structure:","position":{"start":{"line":148,"column":1},"end":{"line":148,"column":1}},"key":"nPl6gE64aT"}],"key":"lBABoPlYQ5"},{"type":"code","lang":"none","value":"* Data:\n\n    * type (green or orange)\n    * location\n\n* Methods:\n\n    * determine whether happy or not given locations of other agents\n    * If not happy, move\n        * find a new location where happy","key":"oa3I2AUmjP"},{"type":"paragraph","position":{"start":{"line":163,"column":1},"end":{"line":163,"column":1}},"children":[{"type":"text","value":"Let’s build them.","position":{"start":{"line":163,"column":1},"end":{"line":163,"column":1}},"key":"rzc9zY0wtn"}],"key":"KWYbsMitAa"}],"key":"ddTSFVlhMh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"class Agent:\n\n    def __init__(self, type):\n        self.type = type\n        self.draw_location()\n\n    def draw_location(self):\n        self.location = uniform(0, 1), uniform(0, 1)\n\n    def get_distance(self, other):\n        \"Computes the euclidean distance between self and other agent.\"\n        a = (self.location[0] - other.location[0])**2\n        b = (self.location[1] - other.location[1])**2\n        return sqrt(a + b)\n\n    def happy(self,\n                agents,                # List of other agents\n                num_neighbors=10,      # No. of agents viewed as neighbors\n                require_same_type=5):  # How many neighbors must be same type\n        \"\"\"\n            True if a sufficient number of nearest neighbors are of the same\n            type.\n        \"\"\"\n\n        distances = []\n\n        # Distances is a list of pairs (d, agent), where d is distance from\n        # agent to self\n        for agent in agents:\n            if self != agent:\n                distance = self.get_distance(agent)\n                distances.append((distance, agent))\n\n        # Sort from smallest to largest, according to distance\n        distances.sort()\n\n        # Extract the neighboring agents\n        neighbors = [agent for d, agent in distances[:num_neighbors]]\n\n        # Count how many neighbors have the same type as self\n        num_same_type = sum(self.type == agent.type for agent in neighbors)\n        return num_same_type >= require_same_type\n\n    def update(self, agents):\n        \"If not happy, then randomly choose new locations until happy.\"\n        while not self.happy(agents):\n            self.draw_location()","key":"NKd478QnJg"},{"type":"output","id":"IOEJbIGR4HrKyCu4T1RNx","data":[],"key":"nwSuNCmC6P"}],"key":"fbLZYo7xDD"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":215,"column":1},"end":{"line":216,"column":1}},"children":[{"type":"text","value":"Here’s some code that takes a list of agents and produces a plot showing their\nlocations on the unit square.","position":{"start":{"line":215,"column":1},"end":{"line":215,"column":1}},"key":"Z4NHfmJYgv"}],"key":"NFlKyjigrb"},{"type":"paragraph","position":{"start":{"line":218,"column":1},"end":{"line":219,"column":1}},"children":[{"type":"text","value":"Orange agents are represented by orange dots and green ones are represented by\ngreen dots.","position":{"start":{"line":218,"column":1},"end":{"line":218,"column":1}},"key":"EeVO7bd1an"}],"key":"QznRY32De2"}],"key":"rVRIYUPhaP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plot_distribution(agents, cycle_num):\n    \"Plot the distribution of agents after cycle_num rounds of the loop.\"\n    x_values_0, y_values_0 = [], []\n    x_values_1, y_values_1 = [], []\n    # == Obtain locations of each type == #\n    for agent in agents:\n        x, y = agent.location\n        if agent.type == 0:\n            x_values_0.append(x)\n            y_values_0.append(y)\n        else:\n            x_values_1.append(x)\n            y_values_1.append(y)\n    fig, ax = plt.subplots()\n    plot_args = {'markersize': 8, 'alpha': 0.8}\n    ax.set_facecolor('azure')\n    ax.plot(x_values_0, y_values_0,\n        'o', markerfacecolor='orange', **plot_args)\n    ax.plot(x_values_1, y_values_1,\n        'o', markerfacecolor='green', **plot_args)\n    ax.set_title(f'Cycle {cycle_num-1}')\n    plt.show()","key":"YrG6T5Wq1C"},{"type":"output","id":"YWmpgw6H63yNfWxBDE92u","data":[],"key":"naX0VrU4H3"}],"key":"TcBcZInuHl"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":246,"column":1},"end":{"line":247,"column":1}},"children":[{"type":"text","value":"And here’s some pseudocode for the main loop, where we cycle through the\nagents until no one wishes to move.","position":{"start":{"line":246,"column":1},"end":{"line":246,"column":1}},"key":"s8LaJdvpaG"}],"key":"qVOGnkgK8H"},{"type":"paragraph","position":{"start":{"line":249,"column":1},"end":{"line":249,"column":1}},"children":[{"type":"text","value":"The pseudocode is","position":{"start":{"line":249,"column":1},"end":{"line":249,"column":1}},"key":"x0OHIOF5FO"}],"key":"OK1M4mj0hF"},{"type":"code","lang":"none","value":"plot the distribution\nwhile agents are still moving\n    for agent in agents\n        give agent the opportunity to move\nplot the distribution","key":"eJoqYSksaQ"},{"type":"paragraph","position":{"start":{"line":259,"column":1},"end":{"line":259,"column":1}},"children":[{"type":"text","value":"The real code is below","position":{"start":{"line":259,"column":1},"end":{"line":259,"column":1}},"key":"JyOkL7XdbW"}],"key":"PMTZP3Xeri"}],"key":"vagnva2GW2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def run_simulation(num_of_type_0=600,\n                   num_of_type_1=600,\n                   max_iter=100_000,       # Maximum number of iterations\n                   set_seed=1234):\n\n    # Set the seed for reproducibility\n    seed(set_seed)\n\n    # Create a list of agents of type 0\n    agents = [Agent(0) for i in range(num_of_type_0)]\n    # Append a list of agents of type 1\n    agents.extend(Agent(1) for i in range(num_of_type_1))\n\n    # Initialize a counter\n    count = 1\n\n    # Plot the initial distribution\n    plot_distribution(agents, count)\n\n    # Loop until no agent wishes to move\n    while count < max_iter:\n        print('Entering loop ', count)\n        count += 1\n        no_one_moved = True\n        for agent in agents:\n            old_location = agent.location\n            agent.update(agents)\n            if agent.location != old_location:\n                no_one_moved = False\n        if no_one_moved:\n            break\n\n    # Plot final distribution\n    plot_distribution(agents, count)\n\n    if count < max_iter:\n        print(f'Converged after {count} iterations.')\n    else:\n        print('Hit iteration bound and terminated.')","key":"mKeuZBeAsR"},{"type":"output","id":"ERH1a_NSuL_loMHkE_Qwr","data":[],"key":"gLtumhr6Eo"}],"key":"Vk8hLVrtsM"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"children":[{"type":"text","value":"Let’s have a look at the results.","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"KLrUS1Gdgq"}],"key":"PiNtrhIPQa"}],"key":"wPWtN2gIjX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"run_simulation()","key":"M9TkcSBdGz"},{"type":"output","id":"fnymkZmRIjm5K60t-oEaT","data":[],"key":"r6lJkcxOJQ"}],"key":"pDmGPG1sMs"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":310,"column":1},"end":{"line":310,"column":1}},"children":[{"type":"text","value":"As discussed above, agents are initially mixed randomly together.","position":{"start":{"line":310,"column":1},"end":{"line":310,"column":1}},"key":"l34Dlj4RAz"}],"key":"rtzG9Axqw2"},{"type":"paragraph","position":{"start":{"line":312,"column":1},"end":{"line":312,"column":1}},"children":[{"type":"text","value":"But after several cycles, they become segregated into distinct regions.","position":{"start":{"line":312,"column":1},"end":{"line":312,"column":1}},"key":"WQtQVSCoR6"}],"key":"jA0IVisE7N"},{"type":"paragraph","position":{"start":{"line":314,"column":1},"end":{"line":316,"column":1}},"children":[{"type":"text","value":"In this instance, the program terminated after a small number of cycles\nthrough the set of agents, indicating that all agents had reached a state of\nhappiness.","position":{"start":{"line":314,"column":1},"end":{"line":314,"column":1}},"key":"sRtpMhZgvk"}],"key":"LnjboB3gdp"},{"type":"paragraph","position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"children":[{"type":"text","value":"What is striking about the pictures is how rapidly racial integration breaks down.","position":{"start":{"line":318,"column":1},"end":{"line":318,"column":1}},"key":"PYnfc5isQO"}],"key":"DQrnPlI7kJ"},{"type":"paragraph","position":{"start":{"line":320,"column":1},"end":{"line":320,"column":1}},"children":[{"type":"text","value":"This is despite the fact that people in the model don’t actually mind living mixed with the other type.","position":{"start":{"line":320,"column":1},"end":{"line":320,"column":1}},"key":"auQy68lMhR"}],"key":"c2Kqc7eMEV"},{"type":"paragraph","position":{"start":{"line":322,"column":1},"end":{"line":322,"column":1}},"children":[{"type":"text","value":"Even with these preferences, the outcome is a high degree of segregation.","position":{"start":{"line":322,"column":1},"end":{"line":322,"column":1}},"key":"YFvEn0SjGb"}],"key":"w7obP8AhUu"},{"type":"heading","depth":2,"position":{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},"key":"Cu24nZQs2w"}],"identifier":"exercises","label":"Exercises","html_id":"exercises","implicit":true,"enumerator":"18.4","key":"K3bhmBvtSY"},{"type":"exercise","children":[{"type":"paragraph","position":{"start":{"line":332,"column":1},"end":{"line":334,"column":1}},"children":[{"type":"text","value":"The object oriented style that we used for coding above is neat but harder to\noptimize than procedural code (i.e., code based around functions rather than\nobjects and methods).","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"key":"SQD0AZWEKt"}],"key":"DI9aZ02mfa"},{"type":"paragraph","position":{"start":{"line":336,"column":1},"end":{"line":336,"column":1}},"children":[{"type":"text","value":"Try writing a new version of the model that stores","position":{"start":{"line":336,"column":1},"end":{"line":336,"column":1}},"key":"ZtireonV2I"}],"key":"lM2MumkIyf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":338,"column":1},"end":{"line":340,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":338,"column":1},"end":{"line":338,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the locations of all agents as a 2D NumPy array of floats.","position":{"start":{"line":338,"column":1},"end":{"line":338,"column":1}},"key":"cwwkiJVZPS"}],"key":"sTzPIs1fWE"}],"key":"qDofWlqkCG"},{"type":"listItem","spread":true,"position":{"start":{"line":339,"column":1},"end":{"line":340,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the types of all agents as a flat NumPy array of integers.","position":{"start":{"line":339,"column":1},"end":{"line":339,"column":1}},"key":"LCU6D6tgPa"}],"key":"qdZZ1HjJ1Y"}],"key":"VJfbqsEWjy"}],"key":"ddXWgH8QIt"},{"type":"paragraph","position":{"start":{"line":341,"column":1},"end":{"line":342,"column":1}},"children":[{"type":"text","value":"Write functions that act on this data to update the model using the logic\nsimilar to that described above.","position":{"start":{"line":341,"column":1},"end":{"line":341,"column":1}},"key":"W1BO6beU8J"}],"key":"wZDmwx3E6M"},{"type":"paragraph","position":{"start":{"line":344,"column":1},"end":{"line":344,"column":1}},"children":[{"type":"text","value":"However, implement the following two changes:","position":{"start":{"line":344,"column":1},"end":{"line":344,"column":1}},"key":"MluXXEjsJt"}],"key":"mv1rNFiO4O"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":346,"column":1},"end":{"line":349,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":346,"column":1},"end":{"line":347,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Agents are offered a move at random (i.e., selected randomly and given the\nopportunity to move).","position":{"start":{"line":346,"column":1},"end":{"line":346,"column":1}},"key":"XJOsxhVZRN"}],"key":"Uyi2thgjik"}],"key":"hC0u4lh5GE"},{"type":"listItem","spread":true,"position":{"start":{"line":348,"column":1},"end":{"line":349,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"After an agent has moved, flip their type with probability 0.01","position":{"start":{"line":348,"column":1},"end":{"line":348,"column":1}},"key":"ogLMODqSEO"}],"key":"BjL9c3TAcd"}],"key":"GFcxPfwvbi"}],"key":"O8GUTjcKgI"},{"type":"paragraph","position":{"start":{"line":350,"column":1},"end":{"line":350,"column":1}},"children":[{"type":"text","value":"The second change introduces extra randomness into the model.","position":{"start":{"line":350,"column":1},"end":{"line":350,"column":1}},"key":"pF626yFckw"}],"key":"TyKKAQU3ks"},{"type":"paragraph","position":{"start":{"line":352,"column":1},"end":{"line":353,"column":1}},"children":[{"type":"text","value":"(We can imagine that, every so often, an agent moves to a different city and,\nwith small probability, is replaced by an agent of the other type.)","position":{"start":{"line":352,"column":1},"end":{"line":352,"column":1}},"key":"FDPVeWr6iB"}],"key":"QUwCE9nBoF"}],"label":"schelling_ex1","identifier":"schelling_ex1","enumerated":true,"enumerator":"1","html_id":"schelling-ex1","key":"ACiDB1DhvS"},{"type":"solution","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Solution to ","key":"BlqoyIfFOK"},{"type":"crossReference","label":"schelling_ex1","identifier":"schelling_ex1","kind":"exercise","children":[{"type":"text","value":"Exercise ","key":"YRRccDv83r"},{"type":"text","value":"1","key":"F4IKIcZVzJ"}],"template":"Exercise %s","enumerator":"1","resolved":true,"html_id":"schelling-ex1","key":"C8Fe9hXQbz"}],"key":"QKUhcGSuhF"}],"class":"dropdown","key":"D8ZT6c4tV3"},{"type":"paragraph","position":{"start":{"line":361,"column":1},"end":{"line":361,"column":1}},"children":[{"type":"text","value":"solution here","position":{"start":{"line":361,"column":1},"end":{"line":361,"column":1}},"key":"j2cmWhjhYl"}],"key":"DYzJFYusPw"}],"key":"A1iLPUrwmM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from numpy.random import uniform, randint\n\nn = 1000                # number of agents (agents = 0, ..., n-1)\nk = 10                  # number of agents regarded as neighbors\nrequire_same_type = 5   # want >= require_same_type neighbors of the same type\n\ndef initialize_state():\n    locations = uniform(size=(n, 2))\n    types = randint(0, high=2, size=n)   # label zero or one\n    return locations, types\n\n\ndef compute_distances_from_loc(loc, locations):\n    \"\"\" Compute distance from location loc to all other points. \"\"\"\n    return np.linalg.norm(loc - locations, axis=1)\n\ndef get_neighbors(loc, locations):\n    \" Get all neighbors of a given location. \"\n    all_distances = compute_distances_from_loc(loc, locations)\n    indices = np.argsort(all_distances)   # sort agents by distance to loc\n    neighbors = indices[:k]               # keep the k closest ones\n    return neighbors\n\ndef is_happy(i, locations, types):\n    happy = True\n    agent_loc = locations[i, :]\n    agent_type = types[i]\n    neighbors = get_neighbors(agent_loc, locations)\n    neighbor_types = types[neighbors]\n    if sum(neighbor_types == agent_type) < require_same_type:\n        happy = False\n    return happy\n\ndef count_happy(locations, types):\n    \" Count the number of happy agents. \"\n    happy_sum = 0\n    for i in range(n):\n        happy_sum += is_happy(i, locations, types)\n    return happy_sum\n\ndef update_agent(i, locations, types):\n    \" Move agent if unhappy. \"\n    moved = False\n    while not is_happy(i, locations, types):\n        moved = True\n        locations[i, :] = uniform(), uniform()\n    return moved\n\ndef plot_distribution(locations, types, title, savepdf=False):\n    \" Plot the distribution of agents after cycle_num rounds of the loop.\"\n    fig, ax = plt.subplots()\n    colors = 'orange', 'green'\n    for agent_type, color in zip((0, 1), colors):\n        idx = (types == agent_type)\n        ax.plot(locations[idx, 0],\n                locations[idx, 1],\n                'o',\n                markersize=8,\n                markerfacecolor=color,\n                alpha=0.8)\n    ax.set_title(title)\n    plt.show()\n\ndef sim_random_select(max_iter=100_000, flip_prob=0.01, test_freq=10_000):\n    \"\"\"\n    Simulate by randomly selecting one household at each update.\n\n    Flip the color of the household with probability `flip_prob`.\n\n    \"\"\"\n\n    locations, types = initialize_state()\n    current_iter = 0\n\n    while current_iter <= max_iter:\n\n        # Choose a random agent and update them\n        i = randint(0, n)\n        moved = update_agent(i, locations, types)\n\n        if flip_prob > 0:\n            # flip agent i's type with probability epsilon\n            U = uniform()\n            if U < flip_prob:\n                current_type = types[i]\n                types[i] = 0 if current_type == 1 else 1\n\n        # Every so many updates, plot and test for convergence\n        if current_iter % test_freq == 0:\n            cycle = current_iter / n\n            plot_distribution(locations, types, f'iteration {current_iter}')\n            if count_happy(locations, types) == n:\n                print(f\"Converged at iteration {current_iter}\")\n                break\n\n        current_iter += 1\n\n    if current_iter > max_iter:\n        print(f\"Terminating at iteration {current_iter}\")","key":"bUsekSIHRk"},{"type":"output","id":"WiZNv_5Bi5rt-QsinFbHT","data":[],"key":"RVT61cy8RY"}],"key":"M2CGeUC0wb"},{"type":"block","children":[{"type":"mystDirectiveError","name":"solution","position":{"start":{"line":465,"column":1},"end":{"line":466,"column":1}},"message":"required argument not provided for directive: solution","key":"GNQhzc9rFV"}],"key":"suONDlNhXF"},{"type":"block","position":{"start":{"line":468,"column":1},"end":{"line":468,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":470,"column":1},"end":{"line":470,"column":1}},"children":[{"type":"text","value":"When we run this we again find that mixed neighborhoods break down and segregation emerges.","position":{"start":{"line":470,"column":1},"end":{"line":470,"column":1}},"key":"qi67dZDomV"}],"key":"KIoq6HLFA3"},{"type":"paragraph","position":{"start":{"line":472,"column":1},"end":{"line":472,"column":1}},"children":[{"type":"text","value":"Here’s a sample run.","position":{"start":{"line":472,"column":1},"end":{"line":472,"column":1}},"key":"FlAiRbpmZD"}],"key":"ClG5j8Z022"}],"key":"lM0ox8pDKU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"sim_random_select(max_iter=50_000, flip_prob=0.01, test_freq=10_000)","key":"oQRr3cVjex"},{"type":"output","id":"SfOdcGKrwBvTRUnNgpKhf","data":[],"key":"WoDDysVNEQ"}],"key":"pwgQ0iYwwa"},{"type":"block","children":[],"key":"v10wmUzHV0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"","key":"gPWiQIrAo5"},{"type":"output","id":"McvgzZdZ5ZlnU7Y_xNIup","data":[],"key":"ywYcK8en6l"}],"key":"ONCRif87cR"}],"key":"yX6w27erkE"},"references":{"cite":{"order":["Schelling1969"],"data":{"Schelling1969":{"label":"Schelling1969","enumerator":"1","html":"Schelling, T. C. (1969). Models of Segregation. <i>American Economic Review</i>, <i>59</i>(2), 488–493."}}}},"footer":{"navigation":{"prev":{"title":"Monte Carlo and Option Pricing","url":"/monte-carlo","group":"Probability and Distributions"},"next":{"title":"Dynamics in One Dimension","url":"/scalar-dynam","group":"Nonlinear Dynamics"}}},"domain":"http://localhost:3000"}